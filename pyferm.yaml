vars:
  beer_name: saison
  beer_og: 1.068
  step_runner_interval: 10

sensors:
  - name: my_tilt
    class: pyferm.sensors.tilt.tilt
    params:
      color: yellow

  - name: dummy1
    class: pyferm.sensors.dummy.dummy

  - name: dummy2
    class: pyferm.sensors.dummy.dummy

outputs:
  - name: brewfather
    class: pyferm.outputs.brewfather.brewfather
    params:
      api_key: 1234
      metrics:
        temp:
          sensor: my_tilt
          metric: Temperature
        gravity:
          sensor: my_tilt
          metric: Gravity

  - name: logfile
    class: pyferm.outputs.brewoutput_csv
    params:
      interval: 10
      filename: log.csv
      metrics:
        - sensor: my_tilt
          metric: Temperature
        - sensor: my_tilt
          metric: Gravity

controls:
  - name: ferm_heater
    class: pyferm.controls.heater

  - name: ferm_cooler
    class: pyferm.controls.cooler

steps:
  - name: hold temp
    class: pyferm.steps.brewstep
    params:
      conditions:
        - target_type: time
          target: duration
          value: 15
          operator: ge

  - name: 50% attenuation
    class: pyferm.steps.brewstep
    params:
      triggers:
        - target_type: metric
          target:
            sensor: my_tilt
            metric: Temperature
          value: 70
          operator: ge
      conditions:
        - target_type: metric
          target:
            sensor: my_tilt
            metric: Gravity
          value: 1.050
          operator: le

  - name: pause to dry hop
    class: pyferm.steps.brewstep
    params:
      conditions:
        - target_type: time
          target: duration
          value: -1
          operator: le